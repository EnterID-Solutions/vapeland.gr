<?xml version="1.0" encoding="utf-8"?>
<modification>
    <name>Product Back In-Stock Alert (Core) [Default] [23xx]</name>
    <version>9.0.0</version>
    <author>HuntBee OpenCart Services</author>
    <link>https://www.huntbee.com</link>
	<code>huntbee_stock_notify_ocmod</code>
	
	<!-- STORE FRONT END CHANGES -->
	<file path="catalog/controller/checkout/cart.php">
		<operation>
			<search><![CDATA[if (isset($this->request->post['recurring_id'])) {]]></search>
			<add position="before"><![CDATA[
			//HUNTBEE CODE ADDED FOR OUT OF STOCK FORM POPUP #START_OOSN
			$product_not_in_stock 				= false;
			$customer_selected_all_options 		= array();
			$customer_selected_outstock_option 	= array();
			$user_selected_option_values 		= array();
			
			$hb_oosn_stock_status 	= $this->config->get('hb_oosn_stock_status');
			$hb_oosn_product_qty 	= $this->config->get('hb_oosn_product_qty');
			$language_id 			= $this->config->get('config_language_id');

			if (!$json and !empty($option)) { //program first checks if the product has options
				foreach ($product_options as $product_option) {
					if (!empty($option[$product_option['product_option_id']])) {
						$product_option_id 			= $product_option['product_option_id']; //ID of the option
						//check qty of each option value of option
						$product_option_value 					= $option[$product_option_id]; //ID of the value of the option selected by the user ... this is an important unique property 
						$customer_selected_option_values 		= (array)$product_option_value;
						
						foreach ($customer_selected_option_values as $product_option_value_id){
							$result = $this->db->query("SELECT a.quantity, b.name, c.stock_status_id from ".DB_PREFIX."product_option_value a, ".DB_PREFIX."option_value_description b, ".DB_PREFIX."product c where a.option_value_id = b.option_value_id and a.product_id = c.product_id and a.product_id = '".(int)$product_id."' and a.product_option_id = '".(int)$product_option_id."' and a.product_option_value_id = '".(int)$product_option_value_id."' and b.language_id = '" . (int)$language_id . "' LIMIT 1");
							if ($result->row){
								$option_qty 		= (int)$result->row['quantity'];
								$option_name		= $result->row['name'];
								$stock_status_id 	= $result->row['stock_status_id']; //this is overall product stock status id from product table
								
								if ($hb_oosn_stock_status == '0'){ 
									$stock_status_id = 0;
								}
								//VALIDATION PART
								$customer_selected_all_options[]  = $product_option['name'] . ' : '. $option_name;

								if (($option_qty < $hb_oosn_product_qty) and ($stock_status_id == $hb_oosn_stock_status)){ 
									$product_not_in_stock = true;
									$customer_selected_outstock_option[] 	= $product_option['name'] . ' : '. $option_name;
								}
							}else{
								$customer_selected_all_options[]  = $product_option['name'] . ' : '. $product_option_value_id;
							}
							
							$array_selected_options 		= array('pi'=> $product_id, 'poi' => $product_option_id, 'povi' => $product_option_value_id);
							$user_selected_option_values[]  = json_encode($array_selected_options);
						}
					}
				}
					
				if ($product_not_in_stock === true){
				    $customer_selected_outstock_option_string   = implode(', ', $customer_selected_outstock_option);
					$customer_selected_all_options_string		= implode(', ', $customer_selected_all_options);		
					$user_selected_option_values_string 		= implode('|', $user_selected_option_values);
					
					$json['hberror']['selectedoption']  = html_entity_decode(str_replace('{selected_option}',$customer_selected_outstock_option_string,$this->config->get('hb_oosn_t_info_opt'.$language_id)));
					$json['hberror']['pid'] 			= $product_id;
					$json['hberror']['val'] 			= '<input type="hidden" id="option_values" value="'.htmlentities($user_selected_option_values_string, ENT_QUOTES).'"><input type="hidden" id="selected_option" value="'.htmlentities($customer_selected_outstock_option_string, ENT_QUOTES).'"><input type="hidden" id="all_selected_option" value="'.htmlentities($customer_selected_all_options_string, ENT_QUOTES).'">';
				}
			} //option check ends here
			if (!$json){
					$result = $this->db->query("SELECT quantity, stock_status_id from `".DB_PREFIX."product` WHERE product_id = '".(int)$this->request->post['product_id']."'");
					$product_qty 		= $result->row['quantity'];
					$stock_status_id 	= $result->row['stock_status_id'];
					if ($hb_oosn_stock_status ==  '0'){ 
						$stock_status_id = 0;
					}

					if (($product_qty < $hb_oosn_product_qty) && ($stock_status_id == $hb_oosn_stock_status)){
						$json['hberror']['oosn'] = $this->request->post['product_id'];
					}
			}
			//#END_OOSN
		]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/common/footer.php">	
		<operation>
			<search><![CDATA[$data['newsletter']]]></search>
			<add position="after"><![CDATA[
				$data['notifyform'] = $this->load->controller('extension/module/notifyform');	
			]]></add>
		</operation>
	</file>	
	
	<file path="catalog/view/theme/*/template/common/footer.tpl">
		<operation>
			<search><![CDATA[</body>]]></search>
			<add position="before"><![CDATA[<?php echo $notifyform; ?>]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/product/product.php">	
		<operation>
			<search><![CDATA[if (!$option_value['subtract'] || ($option_value['quantity'] > 0)) {]]></search>
			<add position="replace"><![CDATA[if (!$option_value['subtract'] || $option_value['subtract'] || ($option_value['quantity'] > 0)) {]]></add>
		</operation>
	</file>	
	
	
	<file path="catalog/view/theme/*/template/product/product.tpl">
		<operation>
			<search><![CDATA[$('.text-danger').parent().addClass('has-error');]]></search>
			<add position="after" offset="1"><![CDATA[
			if (json['hberror']) {
				if (json['hberror']['selectedoption']) {
					$('#oosn_info_text').html('');
					$('#oosn_info_text').html(json['hberror']['val']);
					$('#opt_info').html(json['hberror']['selectedoption']);
					notifypop(json['hberror']['pid']);
				}
				if (json['hberror']['oosn']) {
					notifypop(json['hberror']['oosn']);
				}
			}
			]]>
			</add>
		</operation>
	</file>
	
	<!-- MENU LINKS -->
		 <file path="admin/controller/common/column_left.php">
			<operation>
                <search><![CDATA[if ($this->user->hasPermission('access', 'extension/modification')) {]]></search>
                <add position="before"><![CDATA[
				if ($this->user->hasPermission('access', 'extension/module/hb_oosn')) {
				$extension[] = array(
					'name'	   => $this->language->get('text_oosn'),
					'href'     => $this->url->link('extension/module/hb_oosn', 'token=' . $this->session->data['token'], true),
					'children' => array()		
				);
			}
				]]></add>
            </operation>
        </file>		
		
		<file path="admin/language/*/common/column_left.php">
            <operation>
                <search><![CDATA[$_['text_modification']]]></search>
                <add position="before"><![CDATA[$_['text_oosn']                   = 'Product Stock Alert';]]></add>
            </operation>
        </file>

</modification>