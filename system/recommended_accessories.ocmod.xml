<?xml version="1.0" encoding="utf-8"?>
<modification>
	<code>56C8A7E4B17CC8F2B20C850DE2178283</code>
	<name>Συνδυάστε το με</name>
	<version>3.0.3.x</version>
	<author>altxnet</author>
	<link>http://www.altxnet.com</link>
	<file path="admin/language/*/catalog/product.php">
		<operation>
			<search><![CDATA[$_['entry_reward']]]></search>
			<add position="before"><![CDATA[$_['entry_recommended']      = 'Συνδυάστε το με';]]></add>
		</operation>
		<operation>
			<search><![CDATA[$_['help_related']]]></search>
			<add position="before"><![CDATA[$_['help_recommended']       = '(Autocomplete)';]]></add>
		</operation>
	</file>
	<file path="admin/model/catalog/product.php">
		<operation>
			<search><![CDATA[isset($data['product_reward']]]></search>
			<add position="before"><![CDATA[
				if (isset($data['product_recommended'])) {
					foreach ($data['product_recommended'] as $recommended_id) {
						$this->db->query("DELETE FROM " . DB_PREFIX . "product_recommended WHERE product_id = '" . (int)$product_id . "' AND recommended_id = '" . (int)$recommended_id . "'");
						$this->db->query("INSERT INTO " . DB_PREFIX . "product_recommended SET product_id = '" . (int)$product_id . "', recommended_id = '" . (int)$recommended_id . "'");
					}
				}
			]]></add>
		</operation>
		<operation>
			<search><![CDATA["DELETE FROM " . DB_PREFIX . "product_reward]]></search>
			<add position="before"><![CDATA[        $this->db->query("DELETE FROM " . DB_PREFIX . "product_recommended WHERE product_id = '" . (int)$product_id . "'");]]></add>
		</operation>
		<operation>
			<search><![CDATA[$this->getProductRelated($product_id)]]></search>
			<add position="before"><![CDATA[			$data['product_recommended'] = $this->getProductRecommended($product_id);]]></add>
		</operation>
		<operation>
			<search><![CDATA[public function getRecurrings($product_id)]]></search>
			<add position="before"><![CDATA[
				public function getProductRecommended($product_id) {

					if( ! $this->db->query( "SHOW TABLES LIKE '" . DB_PREFIX . "product_recommended'")->num_rows ) {
						$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "product_recommended` (`product_id` int(11) NOT NULL, `recommended_id` int(11) NOT NULL, PRIMARY KEY (`product_id`,`recommended_id`)) ENGINE=MyISAM DEFAULT CHARSET=utf8;");
					}

					$product_related_data = array();

					$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_recommended WHERE product_id = '" . (int)$product_id . "'");

					foreach ($query->rows as $result) {
						$product_related_data[] = $result['recommended_id'];
					}

					return $product_related_data;
				}
			]]></add>
		</operation>
	</file>
	<file path="admin/controller/catalog/product.php">
		<operation>
			<search><![CDATA[isset($this->request->post['points'])]]></search>
			<add position="before"><![CDATA[			// Recommended
			if (isset($this->request->post['product_recommended'])) {
				$products = $this->request->post['product_recommended'];
				} elseif (isset($this->request->get['product_id'])) {
				$products = $this->model_catalog_product->getProductRecommended($this->request->get['product_id']);
				} else {
				$products = array();
			}

			$data['products_recommended'] = array();

			foreach ($products as $product_id) {
				$recommended_info = $this->model_catalog_product->getProduct($product_id);
				if ($recommended_info) {
					$data['products_recommended'][] = array(
					'product_id' => $recommended_info['product_id'],
					'name'       => $recommended_info['name']
					);
				}
			}]]></add>
		</operation>
	</file>
	<file path="admin/view/template/catalog/product_form.twig">
		<operation>
			<search><![CDATA[<input type="hidden" name="product_related[]" value="{{ product_related.product_id }}" />]]></search>
			<add position="after" offset="4"><![CDATA[              <div class="form-group">
				<label class="col-sm-2 control-label" for="input-recommended"><span data-toggle="tooltip" title="{{ help_recommended }}">{{ entry_recommended }}</span></label>
				<div class="col-sm-10">
					<input type="text" name="recommended" value="" placeholder="{{ entry_recommended }}" id="input-recommended" class="form-control"/>
					<div id="product-recommended" class="well well-sm" style="height: 150px; overflow: auto;"> {% for product_recommended in products_recommended %}
						<div id="product-recommended{{ product_recommended.product_id }}"><i class="fa fa-minus-circle"></i> {{ product_recommended.name }}
							<input type="hidden" name="product_recommended[]" value="{{ product_recommended.product_id }}"/>
						</div>
					{% endfor %}</div>
				</div>
			</div>]]></add>
		</operation>
		<operation>
			<search><![CDATA[// Related]]></search>
			<add position="before"><![CDATA[
			// Recommended
			$('input[name=\'recommended\']').autocomplete({
				'source': function(request, response) {
					$.ajax({
						url: 'index.php?route=catalog/product/autocomplete&user_token={{ user_token }}&filter_name=' +  encodeURIComponent(request),
						dataType: 'json',
						success: function(json) {
							response($.map(json, function(item) {
								return {
									label: item['name'],
									value: item['product_id']
								}
							}));
						}
					});
				},
				'select': function(item) {
					$('input[name=\'recommended\']').val('');

					$('#product-recommended' + item['value']).remove();

					$('#product-recommended').append('<div id="product-recommended' + item['value'] + '"><i class="fa fa-minus-circle"></i> ' + item['label'] + '<input type="hidden" name="product_recommended[]" value="' + item['value'] + '" /></div>');
				}
			});

			$('#product-recommended').delegate('.fa-minus-circle', 'click', function() {
				$(this).parent().remove();
			});
			]]></add>
		</operation>
	</file>
	<file path="catalog/language/*/common/cart.php">
		<operation>
			<search><![CDATA[$_['text_recurring']]></search>
			<add position="after"><![CDATA[$_['text_recommended']		   = 'Συνδυάστε το με';]]></add>
		</operation>
	</file>
	<file path="catalog/language/*/product/product.php">
		<operation>
			<search><![CDATA[$_['text_related']]]></search>
			<add position="after"><![CDATA[$_['text_recommended']		   = 'Συνδυάστε το με';]]></add>
		</operation>
	</file>
	<file path="catalog/language/*/checkout/cart.php">
		<operation>
			<search><![CDATA[$_['text_recurring']]></search>
			<add position="after"><![CDATA[$_['text_recommended']		   = 'Συνδυάστε το με';]]></add>
		</operation>
	</file>
	<file path="catalog/model/catalog/product.php">
		<operation>
			<search><![CDATA[getProductLayoutId($product_id)]]></search>
			<add position="before"><![CDATA[
				public function getProductRecommended($product_id) {

					$product_data = array();

					if($this->db->query( "SHOW TABLES LIKE '" . DB_PREFIX . "product_recommended'")->num_rows) {

					$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_recommended pr LEFT JOIN " . DB_PREFIX . "product p ON (pr.recommended_id = p.product_id) LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id) WHERE pr.product_id = '" . (int)$product_id . "' AND p.status = '1' AND p.date_available <= NOW() AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "'");

					foreach ($query->rows as $result) {
						$product_data[$result['recommended_id']] = $this->getProduct($result['recommended_id']);
					}
				}

				return $product_data;
			}]]></add>
		</operation>
	</file>
	<file path="catalog/controller/product/product.php">
		<operation>
			<search><![CDATA[$data['tags'] = array();]]></search>
			<add position="before"><![CDATA[
				$data['products_recommended'] = array();

				$results = $this->model_catalog_product->getProductRecommended($this->request->get['product_id']);

				foreach ($results as $result) {
					if ($result['image']) {
						$image = $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_related_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_related_height'));
						} else {
						$image = $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_related_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_related_height'));
					}

					if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
						$price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
						} else {
						$price = false;
					}

					if ((float)$result['special']) {
						$special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
						$salepercent = round((-1 + ((float)$result['special']/(float)$result['price']))*100);
						} else {
						$special = false;
						$salepercent = false;
					}

					if ($this->config->get('config_tax')) {
						$tax = $this->currency->format((float)$result['special'] ? $result['special'] : $result['price'], $this->session->data['currency']);
						} else {
						$tax = false;
					}

					if ($this->config->get('config_review_status')) {
						$rating = (int)$result['rating'];
						} else {
						$rating = false;
					}

					$data['products_recommended'][] = array(
					'product_id'  => $result['product_id'],
					'thumb'       => $image,
					'name'        => $result['name'],
					'description' => utf8_substr(trim(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8'))), 0, $this->config->get('theme_' . $this->config->get('config_theme') . '_product_description_length')) . '..',
					'price'       => $price,
					'special'     => $special,
					'salepercent'     => $salepercent,
					'tax'         => $tax,
					'minimum'     => $result['minimum'] > 0 ? $result['minimum'] : 1,
					'rating'      => $rating,
					'href'        => $this->url->link('product/product', 'product_id=' . $result['product_id'])
					);
				}
			]]></add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/product/product.twig">
		<operation>
			<search index="2"><![CDATA[{% if not j3.document.isPopup() %}]]></search>
			<add position="after"><![CDATA[
				{% if products_recommended %}
        <div class="container recommendedproducts ">
        <h3 class="title module-title">{{ text_recommended }}</h3>
				<div class="row">
					{% for product in products_recommended %}
					<div class="col-xs-6 col-sm-6 col-md-2 product-grid main-products">
						<div class="product-thumb transition">
							<div class="image">
								<a href="{{ product.href }}" class="product-img"><img src="{{ product.thumb }}" alt="{{ product.name }}" title="{{ product.name }}" class="img-responsive" /></a>
								{% if product.salepercent %}
								<div class="product-labels">
                      <span class="product-label product-label-233 product-label-default"><b>{{product.salepercent}} %</b></span>
                 </div>
								 {% endif %}
							</div>
							<div class="caption">
								<div class="name"><a href="{{ product.href }}">{{ product.name }}</a></div>
								{% if product.price %}
								<p class="price"> {% if not product.special %}
									{{ product.price }}
									{% else %} <span class="price-new">{{ product.special }}</span> <span class="price-old">{{ product.price }}</span> {% endif %}
                </p>
							{% endif %}
							<div class="buttons-wrapper">
	              <div class="button-group">
	                {% if j3.settings.get('catalogCartStatus') %}
	                <div class="cart-group">
	                  <div class="stepper">
	                    <input type="text" name="quantity" value="{{ product.minimum }}" data-minimum="{{ product.minimum }}" class="form-control"/>
	                    <input type="hidden" name="product_id" value="{{ product.product_id }}"/>
	                    <span>
	                    <i class="fa fa-angle-up"></i>
	                    <i class="fa fa-angle-down"></i>
	                  </span>
	                  </div>
	                  <a class="btn btn-cart" {% if (j3.settings.getIn(prefix ~ 'CartDisplay', _context) == "icon") and (j3.settings.getIn(prefix ~ 'CartTooltipStatus', _context)) %} data-toggle="tooltip" data-tooltip-class="{{ module_id ? 'module-products-' ~ module_id ~ ' module-products-grid' : 'product-grid' }} cart-tooltip" data-placement="{{ j3.settings.getIn(prefix ~ 'CartTooltipPosition', _context) }}" title="{{ button_cart }}" {% endif %} onclick="cart.add('{{ product.product_id }}', $(this).closest('.button-group').find('input[name=\'quantity\']').val());" data-loading-text="<span class='btn-text'>{{ button_cart }}</span>"><span class="btn-text">{{ button_cart }}</span></a>
	                </div>
	                {% endif %}

	                {% if j3.settings.get('catalogWishlistStatus') or j3.settings.get('catalogCompareStatus') %}
	                <div class="wish-group">
	                  {% if j3.settings.get('catalogWishlistStatus') %}
	                  <a class="btn btn-wishlist" {% if (j3.settings.getIn(prefix ~ 'WishlistDisplay', _context) == "icon") and (j3.settings.getIn(prefix ~ 'WishlistTooltipStatus', _context)) %} data-toggle="tooltip" data-tooltip-class="{{ module_id ? 'module-products-' ~ module_id ~ ' module-products-grid' : 'product-grid' }} wishlist-tooltip" data-placement="{{ j3.settings.getIn(prefix ~ 'WishlistTooltipPosition', _context) }}" title="{{ button_wishlist }}" {% endif %} onclick="wishlist.add('{{ product.product_id }}')"><span class="btn-text">{{ button_wishlist }}</span></a>
	                  {% endif %}

	                  {% if j3.settings.get('catalogCompareStatus') %}
	                  <a class="btn btn-compare" {% if (j3.settings.getIn(prefix ~ 'CompareDisplay', _context) == "icon") and (j3.settings.getIn(prefix ~ 'CompareTooltipStatus', _context)) %} data-toggle="tooltip" data-tooltip-class="{{ module_id ? 'module-products-' ~ module_id ~ ' module-products-grid' : 'product-grid' }} compare-tooltip" data-placement="{{ j3.settings.getIn(prefix ~ 'CompareTooltipPosition', _context) }}" title="{{ button_compare }}" {% endif %} onclick="compare.add('{{ product.product_id }}')"><span class="btn-text">{{ button_compare }}</span></a>
	                  {% endif %}
	                </div>
	                {% endif %}
	              </div>
	            </div>
              </div>
						</div>
					</div>
				{% endfor %}
         </div>
        </div>
				{% endif %}
				]]></add>
		</operation>
	</file>
</modification>
